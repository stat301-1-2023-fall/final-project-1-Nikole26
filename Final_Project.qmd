---
title: "Progress Memo 2"
subtitle: |
  | Final Project 
  | Data Science 1 with R (STAT 301-1)
author: "Nikole Montero Cervantes"
date: today

format:
  html:
    toc: true
    embed-resources: true
    
execute:
  echo: false
  warning: false

from: markdown+emoji 
---

::: {.callout-tip icon=false}

## Github Repo Link

[https://github.com/stat301-1-2023-fall/final-project-1-Nikole26.git](https://github.com/stat301-1-2023-fall/final-project-1-Nikole26.git)

:::

```{r}
#| label: Loading packages
library(tidyverse)
library(skimr)
library(stringr)
library(ggplot2)
library(plotly)
library(tidyr)
library(knitr)
library(ggrepel)
library(kableExtra)
```

```{r}
#| label: Load packages
data <- read_csv("data/tripadvisor_european_restaurants.csv")
```

# Introduction



# Data Overview

This dataset was acquired through scraping TripAdvisor (TA), a well-known travel website, for its restaurant information. The dataset contains a pool of 1,083,397 restaurants across European countries. There are 42 variables, among these variables, 25 are categorical and 17 are numericals. The raw datasets for Europe's largest cities were then carefully selected and combined for further examination.

It is important to note that this dataset comprises only those restaurants registered in the TripAdvisor database. Thus, it might not encompass all the restaurants within a city because the dataset relies solely on the TripAdvisor database.

# Cleaning the data

```{r}
data_tidy_1 <- data %>%
  rename(
    vegetarian = vegetarian_friendly,
    vegan = vegan_options,
    gluten_free = gluten_free
  ) %>%
  mutate(
    awards = ifelse(is.na(awards), "none", awards),
    special_diets = case_when(
      vegetarian == "Y" ~ "vegetarian",
      vegan == "Y" ~ "vegan",
      gluten_free == "Y" ~ "gluten_free",
      TRUE ~ "None"
    )) %>%
  select(-vegetarian, -vegan, -gluten_free) 

data_tidy_1 <- data_tidy_1 |>
  mutate(price_level = case_when(
    price_level == "€€€€" ~ "expensive",
    price_level == "€€-€€€" ~ "mid-range",
    price_level == "€" ~ "cheap",
    TRUE ~ price_level  # Keep other values unchanged
  ))

data_tidy_1$top_tags <- str_split(data_tidy_1$top_tags, ", ", simplify = FALSE)

data_tidy_1$top_tags <- lapply(data_tidy_1$top_tags, function(tags) {
  tags <- tags[!(tags %in% c("Vegetarian Friendly", "Vegan Options", "Gluten Free Options",
                             "Cheap Eats", "Mid-range", "Fine Dining"))]
  if (length(tags) == 0) {
    tags <- NA
  }
  tags
})

data_tidy_2 <-  data_tidy_1 |>
  mutate(
    minimum_range = as.numeric(str_extract(price_range, "\\d+(\\.\\d+)?")),
    maximum_range = as.numeric(str_extract_all(price_range, "\\d+(\\.\\d+)?") %>% sapply(function(x) x[2])),
    avg_price = (minimum_range + maximum_range) / 2
  ) |>
  select(-c(minimum_range, maximum_range))

data_tidy_2$top_tags <- lapply(data_tidy_2$top_tags, function(tags) {
  tags[tags %in% c("Brew Pub", "Wine Bar", "Pub")] <- "Bar"
  
  tags[tags %in% c("Pizza", "Northern Italy", "Southern Italy",
                   "Nepalese", "Vietnamese", "Hong Kong", "Thai", "Bangladeshi",
                   "Cantonese", "Zhejiang", "Japanese", "Sushi", "Asian",
                   "Mongolian", "Egypt", "Egyptian", "Balti", "Philippine",
                   "Tuscan", "Indian", "Tibetan", "Fujian", "Indonesian",
                   "Korean", "Hubei", "Turkish", "Russian", "Taiwanese", 
                   "Persian", "Middle Eastern", "Lebanese", "Cambodian",
                   "Japenese", "Pakistani", "Szechuan", "Chinese")] <- "Asia"
  
  tags[tags %in% c("Welsh", "Scottish", "Irish", "European", "French",
                   "Italian", "Mediterranean", "British", "Central-Italian",
                   "Dutch", "Greek", "Portuguese", "Czech", "Scandinavian", 
                   "Central European", "Danish", "Romanian", "Lombard",
                   "Ligurian", "Sicilian", "Polish", "Sardinian", "Campania",
                   "Neapolitan", "Austrian", "German", "Belgian", "Southern-Italian",
                   "Basque", "Turkish", "Apulian", "Russian", "Romana",
                   "Northern-Italian", "Southwestern", "Norwegian", "Scandinavian",
                   "Eastern European", "Moroccan", "Armenian", "Swiss", "Spanish",
                   "Catalan")] <- "Europe"
  
  tags[tags %in% c("Egyptian", "Egypt", "African", "Algerian", "Contemporary",
                   "Arabic", "Tunisian")] <- "Africa"
  
  tags[tags %in% c("Chilean", "Venezuelan", "Peruvian", "South American",
                   "Argentinian", "Latin", "Brazilian")] <- "South America"
  
  tags[tags %in% c("Mexican", "Central American", "Native American", "Cuban", "Latin",
                   "Caribbean", "Canadian", "American")] <- "North America"
  
  tags[tags %in% c("New Zealand", "Polynesian", "Australian")] <- "Oceania"
  
  tags <- tags[!(tags %in% c("Delivery Only", "Dinner", "Diner", "Healthy", "Barbecue", "Caucasian",
                             "Quick Bites", "Cajun & Creole", "International", "Deli", "Dessert",
                             "Bakeries", "Fast food", "Cafe", "Street Food", "Seafood", "Gastropub", 
                             "Dining bars", "Grill", "Steakhouse", "Beer restaurants",
                             "Halal", "Soups", "Speciality Food Market"))]
  
  if (length(tags) == 0) {
    tags <- NA
  } else {
    tags <- paste0(unique(tags), collapse = ", ")
  }
  
  tags
})

rows_NA <- data_tidy_2 |>
  summarise(across(everything(), ~sum(is.na(.))))

data_tidy_3 <- select(data_tidy_2, -address, -original_location, 
                      -keywords, -features, -cuisines, -popularity_detailed, 
                      -popularity_generic, -price_range, -original_open_hours)

data_final <- data_tidy_3[rowSums(!is.na(data_tidy_3)) > 24, ]

data_final <- na.omit(data_final, cols = "average_price")

data_final <- data_final |>
  rename(cuisines = top_tags,
         food_rating = food,
         value_rating = value,
         service_rating = service)
```

In the process of cleaning the data, various essential string manipulation, functions and transformation techniques were employed using the dplyr and stringr packages in R. The dataset underwent a series of refinements to enhance its tidiness and facilitate downstream analyses. Key steps in the cleaning process include:

• Variable Renaming

• Creating and Modifying Variables

• Handling Categorical Data

• Text Processing

• List Manipulation

• Numeric Extraction

• Data Filtering and Handling Missing Values

# Starting of EDA 

## Univariate Analysis

In order to find patterns or unusual trends, I started analyzing at each variable in the dataset.

### For Restaurants
Considering there are too many observations, to facilitate my exploration process I decided to look at the 10 most common restaurants. 

```{r}
#| label: Restaurant  
top_restaurants <- data_final %>%
  count(restaurant_name) %>%
  top_n(10, wt = n)  

# Filter the data for the top restaurants
data_top <- data_final %>%
  filter(restaurant_name %in% top_restaurants$restaurant_name)

# Bar plot for the top restaurants
ggplot(data_top, aes(x = restaurant_name)) +
  geom_bar(fill = "lightyellow", color = "black", alpha = 0.7) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Top Restaurants by Frequency",
       x = "Restaurant Names",
       y = "Count") 
```

Through this bar plot, it is possible to see that there are a number of restaurants for the same restaurant name. Thus, looking back at the data I realized that even though those restaurants have the same name, there are all in different cities. Taking as an example, Flunch:

```{r}
data_final |>
  filter(restaurant_name == "Flunch") |>
  select(restaurant_name, city) |>
  kable()
```


Thus, I realized that those restaurants conformed a chain and that's why there a more than one of them for those restaurants. Something particular interesting is that all the top restaurants chains are French. The restaurant chain with the highest amount of restaurants is Leon de Bruxelles.

### For Average Rating

```{r}
ggplot(data_final, aes(x = avg_rating)) +
  geom_histogram(binwidth = 0.5, fill = "lightyellow", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Average Ratings",
       x = "Average Rating",
       y = "Frequency") 
```

Through this plot it is seen the European restaurants in those 31 different countries on TripAdvisor, have a high rating, approximately between 4 to 4.8. This could suggest that the average quality offered in European restaurants is really good. This would be deeper study in the multivariate section. 

### For the Open Days Per Week
```{r}
ggplot(data_final, aes(x = open_days_per_week)) +
  geom_bar(position = "dodge", stat = "count", fill = "lightyellow", color = "black") +
  labs(title = "Count of Open Days per Week",
       x = "Number of Days opened per Week",
       y = "Count") +
  scale_x_continuous(breaks = 1:7, labels = as.character(1:7)) +
  theme_minimal()

```

In this plot it is possible to see that most of the restaurants are open during the seven days of the week. That is followed by six and five days per week. That makes sense since restaurants should generally be open for five days or more in order to make profit. 

However, there are some restaurants that are open for 4 days or less, which is atypical to see. The impact of this low openings amount would be explored in the multivariate section. 

### For Country

```{r}
ggplot(data_final, aes(x = country)) +
  geom_bar(fill = "lightyellow", color = "black", alpha = 0.7) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(title = "Distribution of Countries",
       x = "Country",
       y = "Count") 
```

This plot displays the number of restaurants per country. France has the highest number of restaurants in this dataset, which could potentially explain why the top 10 restaurants chain are French. Croatia and Finland are the countries with the least number of restaurants on TripAdvisor.
France will be explore deeper in a later section. 

### For Average Price

```{r}
ggplot(data_final, aes(x = avg_price)) +
  geom_histogram(bins = 50, fill = "lightyellow", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Average Price",
       x = "Average Price",
       y = "Frequency") 
```

```{r}
ggplot(data_final, aes(x = 1, y = avg_price)) +
  geom_boxplot(fill = "lightyellow", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Average Price",
       x = "",
       y = "Average Price") +
  theme_minimal()
```

This histogram is right-skewed, with a mode around 20 to 30 euros. This could indicate that the majority of European restaurants that appear on TripAdvisor are affordable and generally do not exceed 50 euros. However, there are a some exceptions, which are seen through the outlines in the boxplot with prices ranging from 100 euros to 500 euros. 

### For Price Level

```{r}
ggplot(data_final, aes(x = price_level)) +
  geom_bar(fill = "lightyellow", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Price Levels",
       x = "Price Level",
       y = "Count")
```

It is evident in this bar plot that most of the restaurants are mid-range, aligning with what was observed in the average price plot above. This reinforces the idea that the food offered in the majority of the restaurants in this dataset is affordable and potentially budget-friendly.

### For special Diets

```{r}
ggplot(data_final, aes(x = special_diets)) +
  geom_bar(fill = "lightyellow", color = "black", alpha = 0.7) +
  labs(title = "Distribution of Special Diets",
       x = "Special Diets",
       y = "Count")
```

This plot shows that most of the restaurants on TripAdvisor do not offer special diets in their menus. However, there is some presence of vegetarian options. There is also a possibility that, for some restaurants, it was unknown, so it was registered as if they do not offer special diets. Thus, the impact of special diets can be inaccurate, not meaningful for this EDA.

## For Cuisines

```{r}
# Replace NA and empty strings with "Unknown" before separating rows
data_final$cuisines <- ifelse(is.na(data_final$cuisines) | data_final$cuisines == "" | tolower(data_final$cuisines) == "na", "Unknown", data_final$cuisines)

# Split the cuisines variable into multiple rows and filter out "Unknown" values
split_cuisines <- data_final %>%
  separate_rows(cuisines, sep = ", ") %>%
  filter(cuisines != "Unknown") %>%
  mutate(cuisines = trimws(cuisines))

# Plotting (assuming a simple bar plot)
ggplot(split_cuisines, aes(x = cuisines)) +
   geom_bar(fill = "lightyellow", color = "black") +
  labs(title = "Cuisines Plot", x = "Cuisine", y = "Count")
```

In this plot it is seen that most of the restaurants, more than 10000 restaurants, offer a European cuisine. This make sense, since the restaurants I am exploring are located in different European cities.

There is a moderate presence of restaurants, around 1875 ones, that work as bars too. Asian cuisine is also offered by around 1250 restaurants. African and North American cuisines have a lower presence in the menus of the European restaurants. Fusion and South American cuisine are barely offer in those restaurants. Oceania cuisine has the lowest presence in the restaurants within these database. 